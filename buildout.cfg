[buildout]
checkout = collective.usermanual_robot-papyrus

extends =
    sources.cfg
# robot-support requires Plone-versions:
    http://dist.plone.org/release/4.3-latest/versions.cfg
parts =
    sphinx-build
    sphinx-intl
    transifex-client
# robot-support requires some scripts:
    robot
    pybot
    pybabel

extensions = mr.developer
sources = sources
sources-dir = ${buildout:directory}/src
allow-picked-versions = true
auto-checkout = ${:checkout}

[versions]
Sphinx = 1.2.1

# robot-support requires the newest versions:
docutils =
Pygments =
selenium =
robotsuite =
robotframework =
robotframework-selenium2library =
sphinxcontrib-robotframework =

[sphinx-build]
recipe = zc.recipe.egg
eggs =
    Sphinx
    Pygments
    roman
    collective.sphinx.includedoc
    collective.sphinx.autoatschema
# robot-support requires some packages:
    Plone
    plone.app.robotframework [speak]
    sphinxcontrib-robotframework [docs]
    sphinxcontrib-robotdoc
initialization =
    # This enables po -> mo -compilation
    import os
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    # This activates standalone setup, which bootstraps Plone within Sphinx:
    import shutil
    from os.path import join
    path = join('${buildout:directory}', 'src', '${buildout:checkout}')
    try: shutil.copy(join(path, 'robot-standalone.rst'), join(path, 'robot.rst'))
    except: pass
scripts =
    sphinx-build=sphinx-build

[sphinx-intl]
recipe = zc.recipe.egg
eggs = sphinx-intl [transifex]

[transifex-client]
recipe = zc.recipe.egg
eggs = transifex-client

[robot]
recipe = zc.recipe.egg
eggs =
    Sphinx
    Plone
    plone.app.robotframework [speak]
    sphinxcontrib-robotframework [docs]
initialization =
    # This enables po -> mo -compilation
    import os
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    # This activates robot-server, which uses robot-server Plone with Sphinx:
    import shutil
    from os.path import join
    path = join('${buildout:directory}', 'src', '${buildout:checkout}')
    try: shutil.copy(join(path, 'robot-server.rst'), join(path, 'robot.rst'))
    except: pass
scripts =
    robot-server
    pybot=robot
    sphinx-build=robot-sphinx

[pybot]
recipe = zc.recipe.egg
eggs =
     Plone
     plone.app.robotframework [speak]
     sphinxcontrib-robotframework [docs]
initialization =
    # This enables po -> mo -compilation
    import os
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    # This activates standalone setup, which bootstraps Plone within Sphinx:
    import shutil
    from os.path import join
    path = join('${buildout:directory}', 'src', '${buildout:checkout}')
    try: shutil.copy(join(path, 'robot-standalone.rst'), join(path, 'robot.rst'))
    except: pass
scripts = pybot

[pybabel]
recipe = zc.recipe.egg
eggs = plone.app.robotframework
scripts = pybabel
